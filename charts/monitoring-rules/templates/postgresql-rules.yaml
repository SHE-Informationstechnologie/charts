{{ if .Values.monitoring.postgresql.bouncer }}

{{- $value := "{{ $value }}" -}}
{{- $labels := "{{ $labels }}" -}}
{{- $labelsInstance := "{{ $labels.instance }}" -}}

---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    app: prometheus-operator
    release: prometheus
  name: postgres.rules
  namespace: {{ .Release.Namespace }}
spec:
  groups:

  - name: node_common
    interval: 30s
    rules:

    - alert: PostgresqlDown
      expr: pg_up == 0
      for: 0m
      labels:
        severity: critical
      annotations:
        summary: Postgresql down (instance {{ $labelsInstance }})
        description: "Postgresql instance is down\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

    - alert: PostgresqlRestarted
      expr: time() - pg_postmaster_start_time_seconds < 60
      for: 0m
      labels:
        severity: critical
      annotations:
        summary: Postgresql restarted (instance {{ $labelsInstance }})
        description: "Postgresql restarted\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

    - alert: PostgresqlExporterError
      expr: pg_exporter_last_scrape_error > 0
      for: 0m
      labels:
        severity: critical
      annotations:
        summary: Postgresql exporter error (instance {{ $labelsInstance }})
        description: "Postgresql exporter is showing errors. A query may be buggy in query.yaml\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

    - alert: PostgresqlReplicationLag
      expr: pg_replication_lag > 30 and ON(instance) pg_replication_is_replica == 1
      for: 0m
      labels:
        severity: critical
      annotations:
        summary: Postgresql replication lag (instance {{ $labelsInstance }})
        description: "PostgreSQL replication lag is going up (> 30s)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

    - alert: PostgresqlTableNotVacuumed
      expr: time() - pg_stat_user_tables_last_autovacuum > 60 * 60 * 24
      for: 0m
      labels:
        severity: warning
      annotations:
        summary: Postgresql table not vacuumed (instance {{ $labelsInstance }})
        description: "Table has not been vacuumed for 24 hours\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

    - alert: PostgresqlTableNotAnalyzed
      expr: time() - pg_stat_user_tables_last_autoanalyze > 60 * 60 * 24
      for: 0m
      labels:
        severity: warning
      annotations:
        summary: Postgresql table not analyzed (instance {{ $labelsInstance }})
        description: "Table has not been analyzed for 24 hours\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

    - alert: PostgresqlTooManyConnections
      expr: sum by (datname) (pg_stat_activity_count{datname!~"template.*|postgres"}) > pg_settings_max_connections * 0.8
      for: 2m
      labels:
        severity: warning
      annotations:
        summary: Postgresql too many connections (instance {{ $labelsInstance }})
        description: "PostgreSQL instance has too many connections (> 80%).\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

    - alert: PostgresqlDeadLocks
      expr: increase(pg_stat_database_deadlocks{datname!~"template.*|postgres"}[1m]) > 5
      for: 0m
      labels:
        severity: warning
      annotations:
        summary: Postgresql dead locks (instance {{ $labelsInstance }})
        description: "PostgreSQL has dead-locks\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

    - alert: PostgresqlSlowQueries
      expr: pg_slow_queries > 0
      for: 2m
      labels:
        severity: warning
      annotations:
        summary: Postgresql slow queries (instance {{ $labelsInstance }})
        description: "PostgreSQL executes slow queries\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

    - alert: PostgresqlHighRollbackRate
      expr: rate(pg_stat_database_xact_rollback{datname!~"template.*"}[3m]) / rate(pg_stat_database_xact_commit{datname!~"template.*"}[3m]) > 0.02
      for: 0m
      labels:
        severity: warning
      annotations:
        summary: Postgresql high rollback rate (instance {{ $labelsInstance }})
        description: "Ratio of transactions being aborted compared to committed is > 2 %\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

    - alert: PostgresqlLowXidConsumption
      expr: rate(pg_txid_current[1m]) < 5
      for: 2m
      labels:
        severity: warning
      annotations:
        summary: Postgresql low XID consumption (instance {{ $labelsInstance }})
        description: "Postgresql seems to be consuming transaction IDs very slowly\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

    - alert: PostgresqllowXlogConsumption
      expr: rate(pg_xlog_position_bytes[1m]) < 100
      for: 2m
      labels:
        severity: warning
      annotations:
        summary: Postgresqllow XLOG consumption (instance {{ $labelsInstance }})
        description: "Postgres seems to be consuming XLOG very slowly\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

    - alert: PostgresqlWaleReplicationStopped
      expr: rate(pg_xlog_position_bytes[1m]) == 0
      for: 0m
      labels:
        severity: critical
      annotations:
        summary: Postgresql WALE replication stopped (instance {{ $labelsInstance }})
        description: "WAL-E replication seems to be stopped\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

    - alert: PostgresqlHighRateStatementTimeout
      expr: rate(postgresql_errors_total{type="statement_timeout"}[1m]) > 3
      for: 0m
      labels:
        severity: critical
      annotations:
        summary: Postgresql high rate statement timeout (instance {{ $labelsInstance }})
        description: "Postgres transactions showing high rate of statement timeouts\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"


    - alert: PostgresqlHighRateDeadlock
      expr: increase(postgresql_errors_total{type="deadlock_detected"}[1m]) > 1
      for: 0m
      labels:
        severity: critical
      annotations:
        summary: Postgresql high rate deadlock (instance {{ $labelsInstance }})
        description: "Postgres detected deadlocks\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

    - alert: PostgresqlReplicationLagBytes
      expr: (pg_xlog_position_bytes and pg_replication_is_replica == 0) - on(environment) group_right(instance) (pg_xlog_position_bytes and pg_replication_is_replica == 1) > 1e+09
      for: 0m
      labels:
        severity: critical
      annotations:
        summary: Postgresql replication lag bytes (instance {{ $labelsInstance }})
        description: "Postgres Replication lag (in bytes) is high\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"



    - alert: PostgresqlUnusedReplicationSlot
      expr: pg_replication_slots_active == 0
      for: 1m
      labels:
        severity: warning
      annotations:
        summary: Postgresql unused replication slot (instance {{ $labelsInstance }})
        description: "Unused Replication Slots\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"


    - alert: PostgresqlTooManyDeadTuples
      expr: ((pg_stat_user_tables_n_dead_tup > 10000) / (pg_stat_user_tables_n_live_tup + pg_stat_user_tables_n_dead_tup)) >= 0.1 unless ON(instance) (pg_replication_is_replica == 1)
      for: 2m
      labels:
        severity: warning
      annotations:
        summary: Postgresql too many dead tuples (instance {{ $labelsInstance }})
        description: "PostgreSQL dead tuples is too large\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"


    - alert: PostgresqlSplitBrain
      expr: count(pg_replication_is_replica == 0) != 1
      for: 0m
      labels:
        severity: critical
      annotations:
        summary: Postgresql split brain (instance {{ $labelsInstance }})
        description: "Split Brain, too many primary Postgresql databases in read-write mode\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"


    - alert: PostgresqlPromotedNode
      expr: pg_replication_is_replica and changes(pg_replication_is_replica[1m]) > 0
      for: 0m
      labels:
        severity: warning
      annotations:
        summary: Postgresql promoted node (instance {{ $labelsInstance }})
        description: "Postgresql standby server has been promoted as primary node\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"


    - alert: PostgresqlSslCompressionActive
      expr: sum(pg_stat_ssl_compression) > 0
      for: 0m
      labels:
        severity: critical
      annotations:
        summary: Postgresql SSL compression active (instance {{ $labelsInstance }})
        description: "Database connections with SSL compression enabled. This may add significant jitter in replication delay. Replicas should turn off SSL compression via `sslcompression=0` in `recovery.conf`.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"


    - alert: PostgresqlTooManyLocksAcquired
      expr: ((sum (pg_locks_count)) / (pg_settings_max_locks_per_transaction * pg_settings_max_connections)) > 0.20
      for: 2m
      labels:
        severity: critical
      annotations:
        summary: Postgresql too many locks acquired (instance {{ $labelsInstance }})
        description: "Too many locks acquired on the database. If this alert happens frequently, we may need to increase the postgres setting max_locks_per_transaction.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

{{ end }}