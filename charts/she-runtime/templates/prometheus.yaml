{{- with .Values.prometheusOperator -}}
{{- if .enabled }}

apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: '{{ include "argo.targetCluster.name" $ }}-{{ include "application.name" . }}'
spec:
  project: {{ include "argo.project" $ }}
  source:
    repoURL: {{ .source.repoURL }}
    targetRevision: {{ .source.targetRevision }}
    chart: {{ .source.chart }}
    helm:
      values: |
        {{- with .coreDns }}
        coreDns:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .kubelet }}
        kubelet:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .kubeDns }}
        kubeDns:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .kubeEtcd }}
        kubeEtcd:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .kubeProxy }}
        kubeProxy:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .kubeControllerManager }}
        kubeControllerManager:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .kubeScheduler }}
        kubeScheduler:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        prometheus-node-exporter:
          hostNetwork: {{ .prometheusNodeExporter.hostNetwork | default true }}
        {{- if .alertmanager.enabled }}
        alertmanager:
          {{- if or .alertmanager.secrets .alertmanager.alertmanagerSpec.storage }}
          alertmanagerSpec:
            {{- with .alertmanager.secrets }}
            secrets:
              {{- toYaml . | nindent 14 }}
            {{- end }}
            {{- with .alertmanager.alertmanagerSpec.storage }}
            storage:
              {{- toYaml . | nindent 14 }}
            {{- end }}
          {{- end }}
          {{- if .alertmanager.config }}
          config:
            {{- toYaml .alertmanager.config | nindent 12 }}
          {{- end }}
          {{- if .alertmanager.ingress.enabled | default .ingress.enabled }}
          ingress:
            ingressClassName: {{ .alertmanager.ingress.className }}
            enabled: true
            hosts:
              - alertmanager.{{ .alertmanager.ingress.baseUrl | default .ingress.baseUrl }}
            tls:
              - hosts:
                 - alertmanager.{{ .alertmanager.ingress.baseUrl | default .ingress.baseUrl }}
            annotations:
              nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
              nginx.ingress.kubernetes.io/backend-protocol: HTTP
              {{- if .ingress.annotations }}
              {{- toYaml .ingress.annotations | nindent 14 }}
              {{- end }}
              {{- if .alertmanager.ingress.annotations }}
              {{- toYaml .alertmanager.ingress.annotations | nindent 14 }}
              {{- end }}
          extraArgs:
              - --insecure
          {{- end }}
        {{- end }}
        {{- if .grafana.enabled }}
        grafana:
          {{- if .grafana.ingress.enabled | default .ingress.enabled }}
          ingress:
            ingressClassName: {{ .grafana.ingress.className }}
            enabled: true
            hosts:
              - grafana.{{ .grafana.ingress.baseUrl | default .ingress.baseUrl }}
            tls:
              - hosts:
                 - grafana.{{ .grafana.ingress.baseUrl | default .ingress.baseUrl }}
            annotations:
              nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
              nginx.ingress.kubernetes.io/backend-protocol: HTTP
              {{- if .ingress.annotations }}
              {{- toYaml .ingress.annotations | nindent 14 }}
              {{- end }}
              {{- if .grafana.ingress.annotations }}
              {{- toYaml .grafana.ingress.annotations | nindent 14 }}
              {{- end }}
          extraArgs:
              - --insecure
          sidecar:
            dashboard:
              enabled: true
              label: grafana_dashboard
          {{- with .grafana.extraConfigmapMounts }}
          extraConfigmapMounts:
          {{- toYaml . | nindent 12 }}
          {{- end }}
          grafana.ini:
            analytics:
              check_for_updates: true
            log:
              mode: console file
              level: debug
            grafana_net:
              url: https://grafana.net
            server:
              domain: "grafana.{{ .grafana.ingress.baseUrl | default .ingress.baseUrl }}"
              root_url: https://grafana.{{ .grafana.ingress.baseUrl | default .ingress.baseUrl }}
              router_logging: true
              enforce_domain: true
            auth:
              sigv4_verbose_logging: true
            {{- if .grafana.auth }}
            {{- if .grafana.auth.generic_oauth }}
            auth.generic_oauth:
              {{- toYaml .grafana.auth.generic_oauth | nindent 14 }}
            {{- end }}
            {{- end }}
          {{- end }}
        {{- end }}
        {{- if .prometheus.enabled }}
        {{- if .defaultRules }}
        defaultRules:
          {{- toYaml .defaultRules | nindent 12 }}
        {{- end }}
        prometheus:
          prometheusSpec:
          {{- if .prometheus.prometheusSpec.storageSpec }}
            {{- with .prometheus.prometheusSpec.storageSpec }}
            storageSpec:
              {{- toYaml . | nindent 14 }}
            {{- end }}
          {{- end }}
            additionalScrapeConfigs:
              {{- if .prometheus.crunchyPostgresExporter.enabled }}
              - job_name: 'crunchy-postgres-exporter'
                kubernetes_sd_configs:
                  - role: pod
                relabel_configs:
                  - source_labels: [__meta_kubernetes_pod_label_postgres_operator_crunchydata_com_crunchy_postgres_exporter,__meta_kubernetes_pod_label_crunchy_postgres_exporter]
                    action: keep
                    regex: true
                    separator: ""
                  - source_labels: [__meta_kubernetes_pod_container_port_number]
                    action: drop
                    regex: 5432
                  - source_labels: [__meta_kubernetes_pod_container_port_number]
                    action: drop
                    regex: 10000
                  - source_labels: [__meta_kubernetes_pod_container_port_number]
                    action: drop
                    regex: 8009
                  - source_labels: [__meta_kubernetes_pod_container_port_number]
                    action: drop
                    regex: 2022
                  - source_labels: [__meta_kubernetes_pod_container_port_number]
                    action: drop
                    regex: ^$
                  - source_labels: [__meta_kubernetes_namespace]
                    action: replace
                    target_label: kubernetes_namespace
                  - source_labels: [__meta_kubernetes_pod_name]
                    target_label: pod
                  - source_labels: [__meta_kubernetes_pod_label_postgres_operator_crunchydata_com_cluster,__meta_kubernetes_pod_label_pg_cluster]
                    target_label: cluster
                    separator: ""
                    replacement: '$1'
                  - source_labels: [__meta_kubernetes_namespace,cluster]
                    target_label: pg_cluster
                    separator: ":"
                    replacement: '$1$2'
                  - source_labels: [__meta_kubernetes_pod_ip]
                    target_label: ip
                    replacement: '$1'
                  - source_labels: [__meta_kubernetes_pod_label_postgres_operator_crunchydata_com_instance,__meta_kubernetes_pod_label_deployment_name]
                    target_label: deployment
                    replacement: '$1'
                    separator: ""
                  - source_labels: [__meta_kubernetes_pod_label_postgres_operator_crunchydata_com_role,__meta_kubernetes_pod_label_role]
                    target_label: role
                    replacement: '$1'
                    separator: ""
                  - source_labels: [dbname]
                    target_label: dbname
                    replacement: '$1'
                  - source_labels: [relname]
                    target_label: relname
                    replacement: '$1'
                  - source_labels: [schemaname]
                    target_label: schemaname
                    replacement: '$1'
              {{- end }}
            {{- if .prometheus.serviceMonitorSelectors }}
            serviceMonitorSelector:
              {{- toYaml .prometheus.serviceMonitorSelectors | nindent 14 }}
            {{- end }}              
            {{- if .prometheus.additionalAlertManagerConfigs }}
            additionalAlertManagerConfigs:
              {{- toYaml .prometheus.additionalAlertManagerConfigs | nindent 14 }}
            {{- end }}              
          {{- if .prometheus.ingress.enabled | default .ingress.enabled }}
          ingress:
            ingressClassName: {{ .prometheus.ingress.className }}
            enabled: true
            hosts:
              - prometheus.{{ .prometheus.ingress.baseUrl | default .ingress.baseUrl }}
            tls:
              - hosts:
                 - prometheus.{{ .prometheus.ingress.baseUrl | default .ingress.baseUrl }}
            annotations:
              nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
              nginx.ingress.kubernetes.io/backend-protocol: HTTP
              {{- if .ingress.annotations }}
              {{- toYaml .ingress.annotations | nindent 14 }}
              {{- end }}
              {{- if .prometheus.ingress.annotations }}
              {{- toYaml .prometheus.ingress.annotations | nindent 14 }}
              {{- end }}
          extraArgs:
              - --insecure
          {{- end }}
        {{- end }}
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
    syncOptions:
      - CreateNamespace=true
      - ServerSideApply=true
  destination:
    name: '{{ include "argo.targetCluster" $ }}'
    namespace: {{ include "application.namespace" . }}

---
{{- end }}
{{- end }}
