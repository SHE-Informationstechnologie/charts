argo:
  targetCluster: in-cluster
  # targetClusterAltName can be used to override the cluster name for resource naming purposes
  targetClusterAltName: null
  project: default

sealedSecrets:
  namespace: sealed-secrets
  name: sealed-secrets
  enabled: true
  source:
    repoURL: https://charts.bitnami.com/bitnami
    targetRevision: 2.5.3
    chart: sealed-secrets
    helm:
      parameters:
        - name: skipRecreate
          value: 'true'
        - name: keyRenewPeriod
          value: '0'

postgresOperator:
  namespace: postgres-operator
  name: postgres-operator
  enabled: true
  source:
    repoURL: https://github.com/SHE-Informationstechnologie/postgres-operator-examples.git
    path: kustomize/install
    targetRevision: v5.7.1-she-2

customerApplications:
  enabled: false
  namespace: she-vendor
  name: customer-applications
  source:
    repoURL: my.repo.url
    path: path/to/app
    targetRevision: HEAD
    directory:
      recurse: false

eckOperator:
  namespace: eck-operator
  name: eck-operator
  enabled: false
  source:
    repoURL: https://helm.elastic.co
    targetRevision:  2.16.1
    chart: eck-operator

prometheusOperator:
  namespace: monitoring
  name: prom-operator
  enabled: true
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 68.4.5
    chart: kube-prometheus-stack
    helm:
      values: |
  global: {}
  commonLabels: {}

  kubeStateMetrics:
    serviceMonitor:
      additionalLabels:
        kubernetes.she.net/prometheus-instance: default

  prometheusOperator: 
    hostNetwork: true

  prometheusNodeExporter:
    serviceMonitor:
      additionalLabels:
        kubernetes.she.net/prometheus-instance: default

  alertmanager:
    enabled: true
    ingress:
      ingressClassName: nginx-internal
      enabled: true
      hosts:
        - my.domain
      annotations: { }
    alertmanagerSpec:
      storage: {}
      ## Secrets is a list of Secrets in the same namespace as the Alertmanager object, which shall be mounted into the
      ## Alertmanager Pods. The Secrets are mounted into /etc/alertmanager/secrets/.
      secrets: []
      ## Alertmanager configuration directives
      ## ref: https://prometheus.io/docs/alerting/configuration/#configuration-file
      ##  https://prometheus.io/webtools/alerting/routing-tree-editor/

  grafana:
    enabled: true
    serviceMonitor:
      labels:
        kubernetes.she.net/prometheus-instance: default
    ingress:
      ingressClassName: nginx-internal
      enabled: true
      hosts:
        - my.domain
      annotations: {}

  prometheus:
    enabled: true
    crunchyPostgresExporter:
      enabled: true
    ingress:
      ingressClassName: nginx-internal
      enabled: true
      baseUrl: my.domain
      annotations: {}
    prometheusSpec:
      storageSpec: {}
    thanosIngress:
      enabled: false
    thanosService:
      enabled: true
    thanosServiceExternal:
      enabled: false

internalIngressController:
  namespace: internal-ingress
  name: internal-ingress
  enabled: true
  source:
    repoURL: https://kubernetes.github.io/ingress-nginx
    targetRevision: 4.12.0
    chart: ingress-nginx
    helm:
      parameters:
        - name: controller.ingressClass
          value: nginx-internal
        - name: controller.watchIngressWithoutClass
          value: 'true'
        - name: controller.ingressClassResource.name
          value: nginx-internal
        - name: controller.ingressClassResource.default
          value: 'true'

publicIngressController:
  namespace: public-ingress
  name: public-ingress
  enabled: true
  source:
    repoURL: https://kubernetes.github.io/ingress-nginx
    targetRevision: 4.12.0
    chart: ingress-nginx
    helm:
      parameters:
        - name: controller.ingressClassResource.controllerValue
          value: k8s.io/ingress-nginx-public

argoApp:
  namespace: argocd
  name: argo
  enabled: false
  source:
    repoURL: https://argoproj.github.io/argo-helm
    targetRevision: 6.11.1
    chart: argo-cd
    helm:
      parameters:
        - name: server.ingress.enabled
          value: 'true'
        - name: controller.metrics.enabled
          value: 'true'

velero:
  namespace: velero
  name: velero
  enabled: true
  source:
    repoURL: https://vmware-tanzu.github.io/helm-charts
    targetRevision: 8.3.0
    chart: velero
    helm:
      values: |
        initContainers:
        - name: velero-plugin-for-aws
          image: velero/velero-plugin-for-aws:v1.11.0
          imagePullPolicy: IfNotPresent
          volumeMounts:
          - mountPath: /target
            name: plugins
        # - name: velero-plugin-for-azure
        #   image: velero/velero-plugin-for-microsoft-azure:v1.11.0
        #   imagePullPolicy: IfNotPresent
        #   volumeMounts:
        #   - mountPath: /target
        #     name: plugins

        resources:
          requests:
            cpu: 500m
            memory: 128Mi
          limits:
            cpu: 1000m
            memory: 512Mi

metrics:
  namespace: kube-system
  name: metrics
  enabled: false
  source:
    repoURL: https://kubernetes-sigs.github.io/metrics-server
    targetRevision: 3.12.0
    chart: metrics-server
    helm:
      values: |
        defaultArgs:
          - --cert-dir=/tmp
          - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
          - --kubelet-use-node-status-port
          - --metric-resolution=15s
          - --kubelet-insecure-tls

kyverno:
  namespace: kyverno
  name: kyverno
  enabled: false
  source:
    repoURL: https://kyverno.github.io/kyverno
    chart: kyverno
    targetRevision: 3.0.5
    helm:
      parameters:
        - name: admissionController.replicas
          value: '3'

kyvernoPolicies:
  enabled: false
  namespace: kyverno
  name: kyverno-policies
  source:
    repoURL: https://she-informationstechnologie.github.io/charts
    chart: kyverno-policies
    targetRevision: 0.0.5

trivyOperator:
  enabled: false
  namespace: trivy-operator
  name: trivy-operator
  source:
    repoURL: https://aquasecurity.github.io/helm-charts/
    chart: trivy-operator
    targetRevision: 0.19.1
    helm:
      values: |
        serviceMonitor:
          enabled: true
          labels:
            kubernetes.she.net/prometheus-instance: default
        trivy:
          ignoreUnfixed: false
        operator:
          metricsVulnIdEnabled: true

argoWorkflow:
  enabled: false
  namespace: argo-workflows
  name: argo-workflows
  source:
    repoURL: https://argoproj.github.io/argo-helm
    chart: argo-workflows
    targetRevision: 0.38.0
    helm:
      values: |
        controller:
          metricsConfig:
            enabled: true
          telemetryConfig:
            enabled: true
          serviceMonitor:
            enabled: true
            additionalLabels:
              kubernetes.she.net/prometheus-instance: default
            namespace: "monitoring"
        workflow:
          serviceAccount:
            create: true
            name: "argo-workflows"
        server:
          authMode: "server"

minioOperator:
  enabled: false
  namespace: minio-operator
  name: minio-operator
  source:
    repoURL: https://operator.min.io
    chart: operator
    targetRevision: 5.0.14
    # helm:
    #   values: |
    #     console:
    #       ingress:
    #         enabled: true
    #         ingressClassName: nginx-internal
    #         host: # ...
    #     operator:
    #       env:
    #         - name: PROMETHEUS_NAMESPACE
    #           value: monitoring

opensearchOperator:
  enabled: false
  namespace: opensearch-operator
  name: opensearch-operator
  source:
    repoURL: https://opensearch-project.github.io/opensearch-k8s-operator/
    chart: opensearch-operator
    targetRevision: 2.6.1

taintController:
  enabled: false
  namespace: taint-controller
  name: taint-controller
  source:
    repoURL: https://bagaluten.github.io/charts/
    chart: tainter
    targetRevision: 0.1.4
    helm:
      values: |
        config:
          data: |
            labelTaints:
              - taint:
                  key: dedicated
                  value: database
                  effect: NoSchedule
                selector:
                  key: node-role.kubernetes.io/database
              - taint:
                  key: dedicated
                  value: minio
                  effect: NoSchedule
                selector:
                  key: node-role.kubernetes.io/minio
            ignoreLabel:
              key: node-role.kubernetes.io/control-plane

x509Exporter:
  namespace: monitoring
  name: x509-exporter
  enabled: true
  source:
    repoURL: https://charts.enix.io
    targetRevision: 3.18.1
    chart: x509-certificate-exporter
    helm:
      values: |
        secretTypes:
        - type: kubernetes.io/tls
          key: tls.crt
        - type: Opaque
          key: tls.crt
        prometheusServiceMonitor:
          extraLabels:
            kubernetes.she.net/prometheus-instance: default
        prometheusRules:
          extraLabels:
            kubernetes.she.net/prometheus-instance: default
          disableBuiltinAlertGroup: false
        secretsExporter:
          resources:
            requests:
              cpu: 20m
              memory: 20Mi
            limits:
              cpu: null
              memory: 150M
