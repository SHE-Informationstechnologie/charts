apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  name: grafana-custom-config
  namespace: monitoring
stringData:
  GF_AUTH_GENERIC_OAUTH_ENABLED: "true"
  # Title of the button in Grafana which will redirect the user to the sso provider
  GF_AUTH_GENERIC_OAUTH_NAME: "example"
  GF_AUTH_GENERIC_OAUTH_ALLOW_SIGN_UP: "true"
  # Name of the oidc client responsible for this Grafana
  GF_AUTH_GENERIC_OAUTH_CLIENT_ID: "example"
  # Secret of the oidc client responsible for the Grafana
  GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: "secret"
  GF_AUTH_GENERIC_OAUTH_SCOPES: "openid email profile offline_access roles"
  GF_AUTH_GENERIC_OAUTH_EMAIL_ATTRIBUTE_PATH: "email"
  GF_AUTH_GENERIC_OAUTH_LOGIN_ATTRIBUTE_PATH: "username"
  GF_AUTH_GENERIC_OAUTH_NAME_ATTRIBUTE_PATH: "full_name"
  GF_AUTH_GENERIC_OAUTH_TLS_SKIP_VERIFY_INSECURE: "true"
  GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH: "contains(roles[*], 'admin') && 'Admin' || contains(roles[*], 'maintainer') && 'Editor' || 'Viewer'"
  GF_AUTH_GENERIC_OAUTH_GROUPS_ATTRIBUTE_PATH: "roles"
  # URL of auth endpoint managed by your oidc provider
  GF_AUTH_GENERIC_OAUTH_AUTH_URL: "https://sso.example.org/realms/example/protocol/openid-connect/auth"
  # URL of token endpoint managed by your oidc provider
  GF_AUTH_GENERIC_OAUTH_TOKEN_URL: "https://sso.example.org/realms/example/protocol/openid-connect/token"
  # URL of userinfo endpoint managed by your oidc provider
  GF_AUTH_GENERIC_OAUTH_API_URL: "https://sso.example.org/realms/example/protocol/openid-connect/userinfo"
