---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: {{ default "oauth2-proxies" .overwriteName }}
  namespace: {{ default "argocd" .namespace }}
  labels:
    {{- include "she-sso.labels" $ | nindent 4 }}
  {{- with .annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  generators:
  - list:
      elements:
      {{- range .Values.oAuthProxyServices }}
      - name: {{ .name }}
        namespace: {{ default "monitoring" .namespace }}
        {{- with index .ingress.hosts 0 }}
        url: {{ .host }}
        {{- end }}
      {{- end }}
  template:
    metadata:
      name: {{` "oauth2-proxy-{{name}}" `}}
    spec:
      project: default
      source:
        repoURL: {{ .Values.oAuthProxy.source.repoURL }}
        chart: {{ .Values.oAuthProxy.source.chart }}
        targetRevision: {{ .Values.oAuthProxy.source.targetRevision }}
        helm:
          parameters:
            - name: initContainers.waitForRedis.enabled
              value: "false"
            - name: redis.enabled
              value: "false"
          values: |
            {{- with .Values.oAuthProxy.image.repository}}
            image:
              repository: {{ . }}
            {{- end }}
            {{- with .Values.oAuthProxy.imagePullSecrets }}
            imagePullSecrets:
            {{ toYaml . | nindent 14 }}
            {{- end }}
            sessionStorage:
              type: redis
              redis:
                existingSecret: {{ .Values.oAuthProxy.redis.existingSecret }}
                passwordKey: {{ .Values.oAuthProxy.redis.passwordKey }}
                standalone:
                  connectionUrl: {{ .Values.oAuthProxy.redis.connectionUrl }}
            config:
              existingSecret: {{ default (printf "oauth2-proxy-{{name}}") .Values.oAuthProxy.existingSecret }}
              {{- with .Values.oAuthProxy.config.configFile }}
              configFile: |-
              {{- . | nindent 16 }}
              {{- end }}
      syncPolicy:
        automated:
          selfHeal: true
          prune: true
        syncOptions:
          - CreateNamespace=true
      destination:
        name: in-cluster
        namespace: {{` "{{namespace}}" `}}
